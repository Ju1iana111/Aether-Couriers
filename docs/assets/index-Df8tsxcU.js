(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();function tt(n){return n&&typeof n.loopDuration=="number"}function et(n){return n&&typeof n.id=="string"&&Array.isArray(n.tiles)}function st(n){return Array.isArray(n)&&n.every(t=>t&&typeof t.id=="string"&&typeof t.cooldown=="number")}function it(n){return Array.isArray(n)&&n.every(t=>t&&typeof t.id=="string"&&typeof t.title=="string")}function nt(n){return Array.isArray(n)&&n.every(t=>t&&typeof t.id=="string"&&typeof t.name=="string")}function ot(n){return Array.isArray(n)&&n.every(t=>t&&typeof t.id=="string"&&typeof t.baseHealth=="number")}function at(n){return Array.isArray(n)&&n.every(t=>t&&typeof t.id=="string"&&typeof t.rotationSpeedModifier=="number")}function rt(n){return Array.isArray(n)&&n.every(t=>t&&typeof t.id=="string"&&typeof t.thrustModifier=="number")}function lt(n){return n&&typeof n.name=="string"&&n.wings&&Array.isArray(n.thrusters)}function ht(n){return n&&typeof n.rotation_speed=="number"&&typeof n.drag=="number"}function ct(n){return Array.isArray(n)&&n.every(t=>t&&typeof t.id=="string")}function dt(n){return Array.isArray(n)&&n.every(t=>t&&typeof t.pilot_level=="number"&&typeof t.currency=="number")}const W="AETHER_CACHE_",G="AETHER_VERSION";function q(n){const t="/Aether-Couriers/";return t.endsWith("/")&&n.startsWith("/")?`${t}${n.substring(1)}`:`${t}${n}`}async function M(n,t,s){const i=q(n),e=localStorage.getItem(G),o=`${W}${i}`;e!==t&&(console.log(`Manifest version changed from ${e} to ${t}. Clearing cache.`),Object.keys(localStorage).filter(r=>r.startsWith(W)||r===G).forEach(r=>localStorage.removeItem(r)),localStorage.setItem(G,t));const a=localStorage.getItem(o);if(a)try{const r=JSON.parse(a);if(s(r))return r}catch(r){console.warn(`Failed to parse cached data for ${i}. Refetching.`,r),localStorage.removeItem(o)}try{const r=await fetch(i);if(!r.ok)throw new Error(`HTTP error! status: ${r.status} for ${i}`);const l=await r.text();let c;try{c=JSON.parse(l)}catch(d){throw console.error(`Error parsing JSON from ${i}. The file content is likely not valid JSON. Raw text:`),console.error(l),d}if(!s(c)){if(Array.isArray(c)){const d=c.find(g=>!s([g]));console.error(`Validation failed for an item in ${i}:`,d)}throw new TypeError(`Invalid data structure for ${i}. Check the JSON content and content-types.ts.`)}return localStorage.setItem(o,JSON.stringify(c)),c}catch(r){throw console.error(`Failed to load or validate JSON from ${i}:`,r),r}}async function ut(n,t){const s=q(n),i=localStorage.getItem(G),e=`${W}${s}`;i!==t&&localStorage.removeItem(e);const o=localStorage.getItem(e);if(o)return o;const a=await fetch(s);if(!a.ok)throw new Error(`HTTP error fetching ${s}`);const r=await a.text();return localStorage.setItem(e,r),r}const pt=async()=>{const n=q("/manifest.json"),t=await fetch(n);if(!t.ok)throw new Error(`Could not load manifest.json from ${n}!`);return await t.json()},gt=(n,t)=>M(n,t,et),ft=(n,t)=>M(n,t,st),yt=(n,t)=>M(n,t,ot),mt=(n,t)=>M(n,t,at),vt=(n,t)=>M(n,t,rt),xt=(n,t)=>M(n,t,it),wt=(n,t)=>M(n,t,nt),Et=(n,t)=>ut(n,t),Pt=(n,t)=>M(n,t,lt),bt=(n,t)=>M(n,t,ht),Mt=(n,t)=>M(n,t,ct),St=(n,t)=>M(n,t,dt),Ct=(n,t)=>M(n,t,tt),Tt=async()=>(console.log("Icon preloading step (no-op for this project)."),Promise.resolve()),At="AetherCouriersDB",It=2,T="gameState",A="playerProfile";class kt{constructor(t=At){this.db=null,this.dbName=t}async openDB(){return this.db?this.db:new Promise((t,s)=>{const i=indexedDB.open(this.dbName,It);i.onerror=()=>s("Error opening IndexedDB"),i.onsuccess=()=>{this.db=i.result,t(this.db)},i.onupgradeneeded=e=>{const o=e.target.result;o.objectStoreNames.contains(T)||o.createObjectStore(T,{keyPath:"id"}),o.objectStoreNames.contains(A)||o.createObjectStore(A,{keyPath:"id"})}})}async saveGameState(t){const i=(await this.openDB()).transaction(T,"readwrite");return i.objectStore(T).put({id:"current",...t}),new Promise((o,a)=>{i.oncomplete=()=>o(),i.onerror=()=>a("Error saving game state")})}async loadGameState(){const e=(await this.openDB()).transaction(T,"readonly").objectStore(T).get("current");return new Promise((o,a)=>{e.onsuccess=()=>{o(e.result?e.result:null)},e.onerror=()=>a("Error loading game state")})}async savePlayerProfile(t){const i=(await this.openDB()).transaction(A,"readwrite");return i.objectStore(A).put(t),new Promise((o,a)=>{i.oncomplete=()=>o(),i.onerror=r=>a(`Error saving player profile: ${r}`)})}async loadPlayerProfile(){const e=(await this.openDB()).transaction(A,"readonly").objectStore(A).get("default");return new Promise((o,a)=>{e.onsuccess=()=>{o(e.result?e.result:null)},e.onerror=()=>a("Error loading player profile")})}}const J=new kt("AetherCouriersDB");function Z(n,t,s){const i=h.physics,e=h.allChassis.find(l=>l.id===n),o=h.allWings.find(l=>l.id===t),a=h.allEngines.find(l=>l.id===s);return{physics:{...i,rotation_speed:i.rotation_speed*o.rotationSpeedModifier,stabilization:i.stabilization*o.stabilizationModifier,drag:i.drag*e.dragModifier,boost_impulse:i.boost_impulse*a.boostImpulseModifier},maxHealth:e.baseHealth,maxEnergy:e.baseEnergy,energyRegen:1*a.energyRegenModifier,gadgetSlots:e.gadgetSlots}}class Dt{constructor(){this.level=null,this.allGadgets=[],this.allEvents=[],this.allChallenges=[],this.tutorialMarkdown="",this.glider=null,this.physics=null,this.allBiomes=[],this.playerProgress=[],this.melody=null,this.allChassis=[],this.allWings=[],this.allEngines=[],this.playerProfile=null,this.playerCurrency=0,this.playerLevel=1,this.playerExperience=0,this.nextLevelExp=1e3,this.levelDepth=1,this.running=!1,this.creditsCollectedThisRun=0,this.dronesDestroyedThisRun=0,this.timeSurvivedThisRun=0}setContent(t,s){this.level=t.level,this.allGadgets=t.gadgets,this.allEvents=t.events,this.allChallenges=t.challenges,this.tutorialMarkdown=t.tutorial,this.glider=t.glider,this.physics=t.physics,this.allBiomes=t.biomes,this.playerProgress=t.playerProgress,this.melody=t.melody,this.allChassis=t.chassis,this.allWings=t.wings,this.allEngines=t.engines,this.playerProfile=s,this.playerCurrency=s.currency,this.playerLevel=s.pilotLevel,this.playerExperience=s.experience;const i=this.playerProgress.find(e=>e.pilot_level===this.playerLevel)||{next_level_exp:1e3*Math.pow(1.5,this.playerLevel-1)};this.nextLevelExp=i.next_level_exp}addExperience(t){this.running&&(this.playerExperience+=t)}checkForLevelUp(t){for(;this.playerExperience>=this.nextLevelExp;)this.playerExperience-=this.nextLevelExp,this.playerLevel++,this.nextLevelExp=Math.floor(this.nextLevelExp*1.5),console.log(`LEVEL UP! Reached level ${this.playerLevel}. Next level at ${this.nextLevelExp} XP.`),t.recalculateStats()}async saveProfile(){this.playerProfile&&(this.playerProfile.currency=this.playerCurrency,this.playerProfile.pilotLevel=this.playerLevel,this.playerProfile.experience=this.playerExperience,await J.savePlayerProfile(this.playerProfile),console.log("Player profile saved.",this.playerProfile))}resetRunStats(){this.creditsCollectedThisRun=0,this.dronesDestroyedThisRun=0,this.timeSurvivedThisRun=0}updateHUD(t){if(!this.level)return;const s=document.getElementById("level-name");s&&(s.textContent=this.level.id);const i=document.getElementById("pilot-level");i&&(i.textContent=`LVL ${this.playerLevel}`);const e=document.getElementById("exp-bar");if(e){const a=this.playerExperience/this.nextLevelExp*100;e.style.width=`${Math.min(100,a)}%`}const o=document.getElementById("credits-value");if(o&&(o.textContent=this.playerCurrency.toString()),t){const a=document.getElementById("energy-bar");if(a){const d=t.getEnergy()/t.getMaxEnergy()*100;a.style.width=`${d}%`}const r=document.getElementById("health-bar");if(r){const d=t.getHealth()/t.getMaxHealth()*100;r.style.width=`${d}%`}const l=document.getElementById("hud-gadgets");if(l){const d=t.getEquippedGadgets(),g=t.getGadgetCooldowns(),m=["Q","E","R"];let f="";for(let u=0;u<d.length;u++){const p=d[u],P=g[u],C=m[u],S=P>0,R=S?P.toFixed(1):"";f+=`
                    <div class="gadget-display ${S?"on-cooldown":""}" aria-label="Gadget ${u+1}: ${p}">
                        <span class="key">${C}</span>
                        <span class="cooldown-text">${R}</span>
                    </div>
                `}l.innerHTML=f}const c=document.getElementById("hud-buffs");if(c){const d=t.getActiveBuffs();let g="";for(const m of d){let f="";switch(m.type){case"shield":f="üõ°Ô∏è";break;case"weapon_boost":f="‚öîÔ∏è";break;case"overcharge":f="‚ö°";break}g+=`
                    <div class="buff-display" aria-label="${m.type} active">
                        <span class="buff-icon">${f}</span>
                        <span class="buff-timer">${m.timer.toFixed(1)}</span>
                    </div>
                `}c.innerHTML=g}}}}const h=new Dt,v=32;class Lt{constructor(t){if(this.sprites=new Map,this.canvas=t,this.ctx=t.getContext("2d"),!this.ctx)throw new Error("Could not get 2D rendering context")}setSprites(t){this.sprites=t}render(t,s,i,e){const o=t.getActiveBiome()?t.getActiveBiome().palette[0]:"#0a0a1a";if(this.ctx.fillStyle=o,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),!t.isLoaded()){this.ctx.fillStyle="white",this.ctx.fillText("Loading level...",50,50);return}const a=s.getPosition()[0]-this.canvas.width/2,r=s.getPosition()[1]-this.canvas.height/2;this.ctx.save(),this.ctx.translate(-a,-r),this.drawWorld(t.getLevelData()),this.drawGameObjects(t.getGameObjects()),this.drawPatrols(t.getPatrolStates()),this.drawPlayer(s),this.drawProjectiles(i),this.drawEffects(e),this.ctx.restore(),this.drawWind(t.getWindParticles())}drawWorld(t){for(let s=0;s<t.tiles.length;s++)for(let i=0;i<t.tiles[s].length;i++){const e=t.tiles[s][i];let o;switch(e){case".":o=this.sprites.get("ground");break;case"X":o=this.sprites.get("stone");break;case"#":o=this.sprites.get("start");break;case"O":o=this.sprites.get("pit");break;case"G":o=this.sprites.get("portal");break}o&&this.ctx.drawImage(o,i*v,s*v)}}drawGameObjects(t){t.forEach(s=>{const i=s.pos[0]*v+v/2,e=s.pos[1]*v+v/2;switch(this.ctx.beginPath(),s.type){case"credit":this.ctx.fillStyle="#facc15",this.ctx.arc(i,e,v/3,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="#ca8a04",this.ctx.font=`bold ${v/2}px sans-serif`,this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText("$",i,e);break;case"mine":this.ctx.fillStyle="#b91c1c",this.ctx.arc(i,e,v/3,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle="#dc2626",this.ctx.lineWidth=2;for(let a=0;a<8;a++){const r=a/8*Math.PI*2;this.ctx.beginPath(),this.ctx.moveTo(i,e),this.ctx.lineTo(i+Math.cos(r)*v/2.2,e+Math.sin(r)*v/2.2),this.ctx.stroke()}break;case"exit":const o=this.ctx.createRadialGradient(i,e,v/4,i,e,v/2);o.addColorStop(0,"#a78bfa"),o.addColorStop(1,"#5b21b6"),this.ctx.fillStyle=o,this.ctx.fillRect(i-v/2,e-v/2,v,v);break;case"shard":this.ctx.fillStyle="#f59e0b",this.ctx.strokeStyle="#d97706",this.ctx.lineWidth=2,this.ctx.beginPath();for(let a=0;a<5;a++){const r=Math.PI*2/5*a-Math.PI/2,l=v/2.5,c=l/2;this.ctx.lineTo(i+l*Math.cos(r),e+l*Math.sin(r));const d=r+Math.PI/5;this.ctx.lineTo(i+c*Math.cos(d),e+c*Math.sin(d))}this.ctx.closePath(),this.ctx.fill(),this.ctx.stroke();break;case"fuel":this.ctx.fillStyle="#22c55e",this.ctx.strokeStyle="#16a34a",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.rect(i-v/4,e-v/3,v/2,v/1.5),this.ctx.fill(),this.ctx.stroke(),this.ctx.fillStyle="#bbf7d0",this.ctx.font=`bold ${v/2.5}px sans-serif`,this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText("E",i,e);break;case"overcharge":this.ctx.fillStyle="#3b82f6",this.ctx.strokeStyle="#2563eb",this.ctx.lineWidth=3,this.ctx.beginPath();for(let a=0;a<6;a++){const r=Math.PI/3*a;this.ctx.lineTo(i+v/2.5*Math.cos(r),e+v/2.5*Math.sin(r))}this.ctx.closePath(),this.ctx.fill(),this.ctx.stroke(),this.ctx.strokeStyle="#facc15",this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.moveTo(i+6,e-7),this.ctx.lineTo(i-2,e),this.ctx.lineTo(i+2,e),this.ctx.lineTo(i-6,e+7),this.ctx.stroke();break}})}drawPlayer(t){const[s,i]=t.getPosition(),e=t.getAngle();this.ctx.save(),this.ctx.translate(s,i),this.ctx.rotate(e),this.ctx.fillStyle="#eab308",this.ctx.strokeStyle="#fde047",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(12,0),this.ctx.lineTo(-8,-8),this.ctx.lineTo(-8,8),this.ctx.closePath(),this.ctx.fill(),this.ctx.stroke(),this.ctx.restore()}drawPatrols(t){t.forEach(s=>{const[i,e]=s.currentPosition;let o="#ef4444",a="#f87171";s.aiState==="chasing"?(o="#f97316",a="#fb923c"):s.aiState==="returning"&&(o="#3b82f6",a="#60a5fa"),this.ctx.fillStyle=o,this.ctx.strokeStyle=a,this.ctx.lineWidth=2;const r=Math.abs(Math.sin(performance.now()/200)),l=v/3+r*2;this.ctx.beginPath(),this.ctx.arc(i,e,l,0,Math.PI*2),this.ctx.fill(),this.ctx.globalAlpha=.5+r*.5,this.ctx.beginPath(),this.ctx.arc(i,e,l+3,0,Math.PI*2),this.ctx.stroke(),this.ctx.globalAlpha=1})}drawWind(t){this.ctx.strokeStyle="rgba(200, 220, 255, 0.4)",this.ctx.lineWidth=1.5,t.forEach(s=>{this.ctx.beginPath(),this.ctx.moveTo(s.pos[0],s.pos[1]),this.ctx.lineTo(s.pos[0]-s.velocity[0],s.pos[1]-s.velocity[1]),this.ctx.stroke()})}drawProjectiles(t){this.ctx.fillStyle="#7dd3fc",this.ctx.strokeStyle="#e0f2fe",this.ctx.lineWidth=1,t.forEach(s=>{this.ctx.beginPath(),this.ctx.arc(s.pos[0],s.pos[1],4,0,Math.PI*2),this.ctx.fill(),this.ctx.stroke()})}drawEffects(t){t.forEach(s=>{const i=1-s.timer/s.maxTime;if(s.type==="explosion"){const e=i*40,o=1-i;this.ctx.fillStyle=`rgba(251, 191, 36, ${o*.8})`,this.ctx.strokeStyle=`rgba(245, 158, 11, ${o})`,this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.arc(s.pos[0],s.pos[1],e,0,Math.PI*2),this.ctx.fill(),this.ctx.stroke()}else if(s.type==="spark"){const e=(1-i)*10;this.ctx.fillStyle="#f8fafc",this.ctx.beginPath(),this.ctx.arc(s.pos[0],s.pos[1],e,0,Math.PI*2),this.ctx.fill()}})}}class Bt{constructor(){this.keys=new Set,this.mousePressed=!1,this.handleKeyDown=t=>{this.keys.add(t.key.toLowerCase())},this.handleKeyUp=t=>{this.keys.delete(t.key.toLowerCase())},this.handleMouseDown=t=>{t.button===0&&(this.mousePressed=!0)},this.handleMouseUp=t=>{t.button===0&&(this.mousePressed=!1)}}init(){window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp),window.addEventListener("mousedown",this.handleMouseDown),window.addEventListener("mouseup",this.handleMouseUp)}destroy(){window.removeEventListener("keydown",this.handleKeyDown),window.removeEventListener("keyup",this.handleKeyUp),window.removeEventListener("mousedown",this.handleMouseDown),window.removeEventListener("mouseup",this.handleMouseUp),this.keys.clear()}isPressed(t){return this.keys.has(t.toLowerCase())}isMousePressed(){return this.mousePressed}}const E=32,Rt=150,Gt=250,$t=400,Ot=1.5;class _t{constructor(){this.levelData=null,this.biomes=[],this.activeBiome=null,this.patrolStates=[],this.windParticles=[],this.gameObjects=[],this.loaded=!1,this.windDirection=[1,0],this.windChangeInterval=15,this.windChangeTimer=this.windChangeInterval}loadLevelFromData(t,s){try{this.levelData=t,this.biomes=s,this.activeBiome=this.biomes[0]||null,this.gameObjects=this.levelData.gameObjects?[...this.levelData.gameObjects]:[],this.initializePatrols(),this.initializeWindParticles(),this.windChangeTimer=this.windChangeInterval;const i=Math.random()*Math.PI*2;this.windDirection=[Math.cos(i),Math.sin(i)],this.loaded=!0,this.levelData&&this.activeBiome&&console.log(`Level "${this.levelData.id}" loaded with biome "${this.activeBiome.name}".`)}catch(i){console.error("Failed to process level or biomes",i),this.loaded=!1}}findSafeSpawnPoint(){if(!this.levelData)return null;for(let t=0;t<this.levelData.height;t++)for(let s=0;s<this.levelData.width;s++)if(this.levelData.tiles[t][s]==="#")return[s*E+E/2,t*E+E/2];return console.warn("No safe spawn point ('#') found in the level. Defaulting."),null}initializePatrols(){this.levelData&&(this.patrolStates=this.levelData.patrols.map((t,s)=>({patrolData:t,id:s,currentPosition:[t.path[0][0]*E,t.path[0][1]*E],targetWaypointIndex:1,aiState:"patrolling",health:100,maxHealth:100})))}initializeWindParticles(){this.windParticles=[];for(let t=0;t<Rt;t++)this.windParticles.push({pos:[Math.random()*1024,Math.random()*640],velocity:[0,0]})}update(t,s){if(!(!this.loaded||!this.levelData)){if(this.windChangeTimer-=t,this.windChangeTimer<=0){const i=Math.random()*Math.PI*2;this.windDirection=[Math.cos(i),Math.sin(i)],this.windChangeTimer=this.windChangeInterval}this.updatePatrols(t,s),this.updateWind(t)}}findClosestWaypoint(t,s){let i=0,e=1/0;return s.forEach((o,a)=>{const r=[o[0]*E,o[1]*E],l=Math.sqrt(Math.pow(r[0]-t[0],2)+Math.pow(r[1]-t[1],2));l<e&&(e=l,i=a)}),i}updatePatrols(t,s){const i=s.getPosition();this.patrolStates.forEach(e=>{const o=i[0]-e.currentPosition[0],a=i[1]-e.currentPosition[1],r=Math.sqrt(o*o+a*a);switch(e.aiState){case"patrolling":r<Gt&&(e.aiState="chasing");break;case"chasing":r>$t&&(e.aiState="returning");break;case"returning":const f=this.findClosestWaypoint(e.currentPosition,e.patrolData.path);e.targetWaypointIndex=f;const u=e.patrolData.path[e.targetWaypointIndex],p=[u[0]*E,u[1]*E];Math.sqrt(Math.pow(p[0]-e.currentPosition[0],2)+Math.pow(p[1]-e.currentPosition[1],2))<10&&(e.aiState="patrolling");break}let l,c=1;switch(e.aiState){case"chasing":l=i,c=Ot;break;case"returning":const f=e.patrolData.path[e.targetWaypointIndex];l=[f[0]*E,f[1]*E];break;case"patrolling":default:const u=e.patrolData.path[e.targetWaypointIndex];l=[u[0]*E,u[1]*E],Math.sqrt(Math.pow(l[0]-e.currentPosition[0],2)+Math.pow(l[1]-e.currentPosition[1],2))<5&&(e.targetWaypointIndex=(e.targetWaypointIndex+1)%e.patrolData.path.length);break}const d=l[0]-e.currentPosition[0],g=l[1]-e.currentPosition[1],m=Math.sqrt(d*d+g*g);if(m>1){const f=e.patrolData.speed*E*.5*c;e.currentPosition[0]+=d/m*f*t,e.currentPosition[1]+=g/m*f*t}})}updateWind(t){if(!this.levelData)return;const s=this.levelData.wind;this.windParticles.forEach(i=>{const e=s.amp*5,o=Math.sin(i.pos[1]*s.scale*.1)*s.gusts[0]*1.5;i.velocity[0]=e,i.velocity[1]=o,i.pos[0]+=i.velocity[0]*t,i.pos[1]+=i.velocity[1]*t,i.pos[0]>1024&&(i.pos[0]=0),i.pos[0]<0&&(i.pos[0]=1024),i.pos[1]>640&&(i.pos[1]=0),i.pos[1]<0&&(i.pos[1]=640)})}damagePatrol(t,s){const i=this.patrolStates.find(e=>e.id===t);return i&&i.health>0&&(i.health=Math.max(0,i.health-s),i.health===0)?(this.destroyPatrol(t),!0):!1}destroyPatrol(t){const s=this.patrolStates.findIndex(i=>i.id===t);s!==-1&&this.patrolStates.splice(s,1)}getLevelData(){if(!this.levelData)throw new Error("Attempted to access level data before it was loaded.");return this.levelData}getActiveBiome(){return this.activeBiome}getPatrolStates(){return this.patrolStates}getWindParticles(){return this.windParticles}getWind(){return this.levelData?{direction:this.windDirection,strength:this.levelData.wind.amp}:{direction:[0,0],strength:0}}getGameObjects(){return this.gameObjects}removeGameObject(t){this.gameObjects=this.gameObjects.filter(s=>s.id!==t)}isLoaded(){return this.loaded}}const Wt={C1:32.7,"C#1":34.65,D1:36.71,"D#1":38.89,E1:41.2,F1:43.65,"F#1":46.25,G1:49,"G#1":51.91,A1:55,"A#1":58.27,B1:61.74,C2:65.41,"C#2":69.3,D2:73.42,"D#2":77.78,E2:82.41,F2:87.31,"F#2":92.5,G2:98,"G#2":103.8,A2:110,"A#2":116.5,B2:123.5,C3:130.8,"C#3":138.6,D3:146.8,"D#3":155.6,E3:164.8,F3:174.6,"F#3":185,G3:196,"G#3":207.7,A3:220,"A#3":233.1,B3:246.9,C4:261.6,"C#4":277.2,D4:293.7,"D#4":311.1,E4:329.6,F4:349.2,"F#4":370,G4:392,"G#4":415.3,A4:440,"A#4":466.2,B4:493.9,C5:523.3,"C#5":554.4,D5:587.3,"D#5":622.3,E5:659.3,F5:698.5,"F#5":740,G5:784,"G#5":830.6,A5:880,"A#5":932.3,B5:987.8};class Ft{constructor(){this.audioContext=null,this.mainGain=null,this.isMuted=!1,this.isInitialized=!1,this.melody=null,this.musicScheduler=null}async init(){if(!this.isInitialized)try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.mainGain=this.audioContext.createGain(),this.mainGain.connect(this.audioContext.destination),this.isInitialized=!0,console.log("AudioContext initialized successfully."),this.audioContext.state==="suspended"&&await this.audioContext.resume()}catch(t){console.error("Web Audio API is not supported in this browser or failed to initialize.",t)}}setMelody(t){this.melody=t}startBGM(){if(!this.isInitialized||!this.melody||this.musicScheduler!==null)return;const t=()=>{this.playMelody(),this.musicScheduler=window.setTimeout(t,this.melody.loopDuration*1e3)};t(),console.log("BGM started.")}stopBGM(){this.musicScheduler!==null&&(clearTimeout(this.musicScheduler),this.musicScheduler=null,console.log("BGM stopped."))}playMelody(){if(!this.audioContext||!this.melody)return;const t=this.audioContext.currentTime;Object.values(this.melody).forEach(s=>{if(typeof s=="object"&&s.notes){const i=this.audioContext.createGain();i.gain.value=s.gain,i.connect(this.mainGain),s.notes.forEach(e=>{const o=Wt[e.note];if(o){const a=this.audioContext.createOscillator();a.type=s.instrument,a.frequency.setValueAtTime(o,t+e.time);const r=this.audioContext.createGain();r.gain.setValueAtTime(1,t+e.time),r.gain.exponentialRampToValueAtTime(.001,t+e.time+e.duration),a.connect(r),r.connect(i),a.start(t+e.time),a.stop(t+e.time+e.duration)}})}})}playSoundEffect(t){if(!this.isInitialized||!this.audioContext||this.isMuted)return;const s=this.audioContext.currentTime,i=this.audioContext.createGain();i.connect(this.mainGain);let e;switch(t){case"laser":i.gain.value=.1,e=this.audioContext.createOscillator(),e.type="sawtooth",e.frequency.setValueAtTime(880,s),e.frequency.exponentialRampToValueAtTime(300,s+.15),i.gain.exponentialRampToValueAtTime(1e-4,s+.15),e.connect(i),e.start(s),e.stop(s+.15);break;case"pickup":i.gain.value=.2,e=this.audioContext.createOscillator(),e.type="sine",e.frequency.setValueAtTime(900,s),e.frequency.exponentialRampToValueAtTime(1200,s+.1),i.gain.exponentialRampToValueAtTime(1e-4,s+.1),e.connect(i),e.start(s),e.stop(s+.1);break;case"explosion":i.gain.value=.5;const o=this.createNoiseBuffer(.5);o.connect(i),i.gain.exponentialRampToValueAtTime(1e-4,s+.5),o.start(s);break;case"damage":i.gain.value=.3,e=this.audioContext.createOscillator(),e.type="square",e.frequency.setValueAtTime(120,s),e.frequency.exponentialRampToValueAtTime(40,s+.2),i.gain.exponentialRampToValueAtTime(1e-4,s+.2),e.connect(i),e.start(s),e.stop(s+.2);break;case"boost":i.gain.value=.15,e=this.audioContext.createOscillator(),e.type="sine",e.frequency.setValueAtTime(200,s),e.frequency.exponentialRampToValueAtTime(500,s+.3),i.gain.exponentialRampToValueAtTime(1e-4,s+.3),e.connect(i),e.start(s),e.stop(s+.3);break;case"portal":i.gain.value=.4,e=this.audioContext.createOscillator(),e.type="sawtooth",e.frequency.setValueAtTime(100,s),e.frequency.exponentialRampToValueAtTime(1500,s+.8),i.gain.exponentialRampToValueAtTime(1e-4,s+.8),e.connect(i),e.start(s),e.stop(s+.8);break;case"hit":i.gain.value=.4;const a=this.createNoiseBuffer(.1);a.connect(i),i.gain.exponentialRampToValueAtTime(1e-4,s+.1),a.start(s);break}}createNoiseBuffer(t){const s=this.audioContext.sampleRate*t,i=this.audioContext.createBuffer(1,s,this.audioContext.sampleRate),e=i.getChannelData(0);for(let a=0;a<s;a++)e[a]=Math.random()*2-1;const o=this.audioContext.createBufferSource();return o.buffer=i,o}toggleMute(){return!this.isInitialized||!this.mainGain?this.isMuted:(this.isMuted=!this.isMuted,this.mainGain.gain.setValueAtTime(this.isMuted?0:1,this.audioContext.currentTime),console.log(`Audio ${this.isMuted?"muted":"unmuted"}.`),this.isMuted)}}const x=new Ft,b=32,V=25,qt=15,U=5,z=150,Ht=30,Nt=10,jt=35,X=5,K=2,O=15;class Vt{constructor(t,s,i){this.pos=[0,0],this.vel=[0,0],this.angle=-Math.PI/2,this.boostCooldown=0,this.fireCooldown=0,this.health=100,this.energy=100,this.overchargeTimer=0,this.weaponBoostTimer=0,this.shieldTimer=0,this.equippedGadgets=[],this.gadgetCooldowns=[],this.thrustForce=350,this.gliderTemplate=t,this.stats=s,this.input=i,this.updateStats(s)}updateStats(t){this.stats=t;const s=h.allEngines.find(i=>{var e;return i.id===((e=h.playerProfile)==null?void 0:e.equippedEngine)});this.thrustForce=350*s.thrustModifier,this.equippedGadgets=this.gliderTemplate.gadgets.slice(0,this.stats.gadgetSlots),this.gadgetCooldowns=new Array(this.equippedGadgets.length).fill(0),this.recalculateStats()}recalculateStats(){const t=h.playerLevel,s=this.getMaxHealth(),i=this.getMaxEnergy(),e=this.stats.maxHealth,o=this.stats.maxEnergy,a=5,r=3,l=e+(t-1)*a,c=o+(t-1)*r;l>s&&(this.health+=l-s),c>i&&(this.energy+=c-i),this.health=Math.min(this.health,l),this.energy=Math.min(this.energy,c),console.log(`Stats recalculated for Level ${t}: HP=${l}, EN=${c}`)}update(t,s,i){if(this.health<=0)return;this.boostCooldown=Math.max(0,this.boostCooldown-t),this.fireCooldown=Math.max(0,this.fireCooldown-t),this.overchargeTimer=Math.max(0,this.overchargeTimer-t),this.weaponBoostTimer=Math.max(0,this.weaponBoostTimer-t),this.shieldTimer=Math.max(0,this.shieldTimer-t);for(let g=0;g<this.gadgetCooldowns.length;g++)this.gadgetCooldowns[g]=Math.max(0,this.gadgetCooldowns[g]-t);const e=this.overchargeTimer>0?this.stats.energyRegen*3:this.stats.energyRegen;this.energy=Math.min(this.getMaxEnergy(),this.energy+e*t),(this.input.isPressed("w")||this.input.isPressed("—Ü"))&&this.energy>0&&(this.vel[0]+=Math.cos(this.angle)*this.thrustForce*t,this.vel[1]+=Math.sin(this.angle)*this.thrustForce*t,this.energy=Math.max(0,this.energy-qt*t)),(this.input.isPressed("a")||this.input.isPressed("—Ñ"))&&this.energy>0&&(this.angle-=this.stats.physics.rotation_speed*t,this.energy=Math.max(0,this.energy-U*t)),(this.input.isPressed("d")||this.input.isPressed("–≤"))&&this.energy>0&&(this.angle+=this.stats.physics.rotation_speed*t,this.energy=Math.max(0,this.energy-U*t)),this.input.isPressed(" ")&&this.boostCooldown===0&&this.energy>=V&&(this.energy-=V,this.vel[0]+=Math.cos(this.angle)*this.stats.physics.boost_impulse,this.vel[1]+=Math.sin(this.angle)*this.stats.physics.boost_impulse,this.boostCooldown=this.stats.physics.cooldown,x.playSoundEffect("boost")),(this.input.isPressed("shift")||this.input.isPressed("—Å"))&&this.energy>0&&(this.vel[0]+=Math.cos(this.angle)*z*t,this.vel[1]+=Math.sin(this.angle)*z*t,this.energy=Math.max(0,this.energy-Ht*t)),(this.input.isPressed("q")||this.input.isPressed("–π"))&&this.tryActivateGadget(0),(this.input.isPressed("e")||this.input.isPressed("—É"))&&this.tryActivateGadget(1),(this.input.isPressed("r")||this.input.isPressed("–∫"))&&this.tryActivateGadget(2);const o=this.weaponBoostTimer>0?X*2:X,a=this.weaponBoostTimer>0?K/2:K;this.input.isMousePressed()&&this.fireCooldown===0&&this.energy>=a&&(this.energy-=a,this.fireCooldown=1/o,i.spawnProjectile(this.pos,this.angle),x.playSoundEffect("laser"));const l=this.energy>0?this.stats.physics.drag:.92;if(s.isLoaded()){const g=s.getWind(),m=12;this.vel[0]+=g.direction[0]*g.strength*m*t,this.vel[1]+=g.direction[1]*g.strength*m*t}const c=[-Math.sin(this.angle),Math.cos(this.angle)],d=this.vel[0]*c[0]+this.vel[1]*c[1];this.vel[0]-=c[0]*d*this.stats.physics.stabilization,this.vel[1]-=c[1]*d*this.stats.physics.stabilization,this.vel[0]*=Math.pow(l,t*60),this.vel[1]*=Math.pow(l,t*60),this.pos[0]+=this.vel[0]*t,this.pos[1]+=this.vel[1]*t,this.handleCollision(s,t),this.handleObjectInteractions(s,i),this.handlePatrolCollision(s,i),this.checkTileHazards(s,i),this.checkMapBounds(s,i)}tryActivateGadget(t){if(t>=this.equippedGadgets.length||this.gadgetCooldowns[t]>0)return;const s=this.equippedGadgets[t],i=h.allGadgets.find(e=>e.id===s);if(i&&this.energy>=i.energy_cost)switch(this.energy-=i.energy_cost,this.gadgetCooldowns[t]=i.cooldown,i.id){case"shield":this.shieldTimer=i.duration||2;break;case"microjet":case"boost":const e=(i.impulse||2.5)*100;this.vel[0]+=Math.cos(this.angle)*e,this.vel[1]+=Math.sin(this.angle)*e,x.playSoundEffect("boost");break;case"grapple":const o=250;this.vel[0]+=Math.cos(this.angle)*o,this.vel[1]+=Math.sin(this.angle)*o,x.playSoundEffect("boost");break;case"fuel":this.energy=Math.min(this.getMaxEnergy(),this.energy+50),x.playSoundEffect("pickup");break}}handleCollision(t,s){if(!t.isLoaded())return;const i=t.getLevelData();if(!i.tiles)return;const e=Math.floor(this.pos[0]/b),o=Math.floor(this.pos[1]/b);i.tiles[o]&&i.tiles[o][e]&&i.tiles[o][e]==="X"&&(this.pos[0]-=this.vel[0]*s,this.pos[1]-=this.vel[1]*s,this.vel[0]*=-.5,this.vel[1]*=-.5)}handleObjectInteractions(t,s){if(!t.isLoaded())return;const i=t.getGameObjects(),e=[];for(const o of i){const a=o.pos[0]*b+b/2,r=o.pos[1]*b+b/2,l=this.pos[0]-a,c=this.pos[1]-r;if(Math.sqrt(l*l+c*c)<b*.75)switch(o.type){case"credit":h.playerCurrency+=o.value,h.creditsCollectedThisRun+=o.value,h.addExperience(o.value/10),e.push(o.id),x.playSoundEffect("pickup");break;case"mine":this.takeDamage(o.damage,s),this.vel=[this.vel[0]*.1,this.vel[1]*.1],e.push(o.id),x.playSoundEffect("explosion");break;case"exit":x.playSoundEffect("portal"),s.loadNextLevel();break;case"shard":this.weaponBoostTimer=8,e.push(o.id),x.playSoundEffect("pickup"),h.addExperience(O);break;case"fuel":this.energy=Math.min(this.getMaxEnergy(),this.energy+50),e.push(o.id),x.playSoundEffect("pickup"),h.addExperience(O);break;case"overcharge":this.overchargeTimer=10,e.push(o.id),x.playSoundEffect("pickup"),h.addExperience(O);break}}e.length>0&&e.forEach(o=>t.removeGameObject(o))}handlePatrolCollision(t,s){if(!t.isLoaded())return;const i=t.getPatrolStates();for(const e of i){const o=this.pos[0]-e.currentPosition[0],a=this.pos[1]-e.currentPosition[1];if(Math.sqrt(o*o+a*a)<b*.75){const l=e.aiState==="chasing"?jt:Nt;this.takeDamage(l,s);const c=e.aiState==="chasing"?200:100,d=Math.atan2(a,o);this.vel[0]=Math.cos(d)*c,this.vel[1]=Math.sin(d)*c}}}checkTileHazards(t,s){if(this.health<=0||!t.isLoaded())return;const i=t.getLevelData(),e=Math.floor(this.pos[0]/b),o=Math.floor(this.pos[1]/b);o>=0&&o<i.height&&e>=0&&e<i.width&&i.tiles[o][e]==="O"&&(this.health=0,s.handlePlayerDeath("Fell into a void pit"))}checkMapBounds(t,s){if(this.health<=0||!t.isLoaded())return;const i=t.getLevelData(),e=i.width*b,o=i.height*b;(this.pos[0]<0||this.pos[0]>e||this.pos[1]<0||this.pos[1]>o)&&(this.health=0,s.handlePlayerDeath("Fell out of the world"))}takeDamage(t,s){if(this.health<=0||this.shieldTimer>0)return;this.health=Math.max(0,this.health-t),console.log(`Took ${t} damage. Health is now ${this.health}`),x.playSoundEffect("damage");const i=document.getElementById("damage-overlay");i&&(i.classList.add("active"),setTimeout(()=>i.classList.remove("active"),150)),this.health<=0&&s.handlePlayerDeath("Health depleted")}reset(){this.recalculateStats(),this.health=this.getMaxHealth(),this.energy=this.getMaxEnergy(),this.vel=[0,0],this.overchargeTimer=0,this.weaponBoostTimer=0,this.shieldTimer=0,this.gadgetCooldowns.fill(0)}replenishEnergy(){this.energy=this.getMaxEnergy()}resetVelocity(){this.vel=[0,0]}getPosition(){return this.pos}getAngle(){return this.angle}getEnergy(){return this.energy}getMaxEnergy(){return this.stats.maxEnergy+(h.playerLevel-1)*3}getHealth(){return this.health}getMaxHealth(){return this.stats.maxHealth+(h.playerLevel-1)*5}setPosition(t){this.pos=t}getEquippedGadgets(){return this.equippedGadgets}getGadgetCooldowns(){return this.gadgetCooldowns}getActiveBuffs(){const t=[];return this.shieldTimer>0&&t.push({type:"shield",timer:this.shieldTimer}),this.weaponBoostTimer>0&&t.push({type:"weapon_boost",timer:this.weaponBoostTimer}),this.overchargeTimer>0&&t.push({type:"overcharge",timer:this.overchargeTimer}),t}}const y=32,Ut=n=>{n.fillStyle="#3a4a34",n.fillRect(0,0,y,y);for(let t=0;t<40;t++){const s=Math.random()*y,i=Math.random()*y;n.fillStyle=Math.random()>.5?"#4a5a44":"#2a3a24",n.fillRect(s,i,2,2)}},zt=n=>{n.fillStyle="#6b7280",n.fillRect(0,0,y,y),n.strokeStyle="#4b5563",n.lineWidth=2,n.strokeRect(1,1,y-2,y-2),n.strokeStyle="#52525b",n.lineWidth=1.5,n.beginPath(),n.moveTo(5,y),n.lineTo(12,20),n.lineTo(22,25),n.moveTo(20,0),n.lineTo(25,10),n.stroke()},Xt=n=>{n.fillStyle="#1f2937",n.fillRect(0,0,y,y),n.strokeStyle="#38bdf8",n.lineWidth=2,n.beginPath(),n.rect(4,4,y-8,y-8),n.moveTo(4,y/2),n.lineTo(y-4,y/2),n.moveTo(y/2,4),n.lineTo(y/2,y-4),n.stroke(),n.fillStyle="#7dd3fc",n.fillRect(y/2-3,y/2-3,6,6)},Kt=n=>{n.fillStyle="#1e1b4b",n.fillRect(0,0,y,y);for(let t=y/2-2;t>2;t-=3){const s=1-t/(y/2);n.strokeStyle=`rgba(167, 139, 250, ${s*.8})`,n.lineWidth=2.5,n.beginPath(),n.arc(y/2,y/2,t,0,Math.PI*2),n.stroke()}},Yt=n=>{n.fillStyle="#020617",n.fillRect(0,0,y,y);for(let t=0;t<20;t++){const s=Math.random()*y,i=Math.random()*y,e=Math.random()*1.5,o=Math.floor(Math.random()*55+200),a=Math.floor(Math.random()*55+200),r=255,l=Math.random()*.8+.2;n.fillStyle=`rgba(${o},${a},${r},${l})`,n.beginPath(),n.arc(s,i,e,0,Math.PI*2),n.fill()}},Jt={ground:Ut,stone:zt,start:Xt,portal:Kt,pit:Yt};async function Zt(n){const t=new OffscreenCanvas(y,y),s=t.getContext("2d");return n(s),await t.transferToImageBitmap()}async function Qt(){const n=new Map,t=Object.entries(Jt).map(async([s,i])=>{const e=await Zt(i);n.set(s,e)});return await Promise.all(t),n}const w=(n,t)=>(n=Math.ceil(n),t=Math.floor(t),Math.floor(Math.random()*(t-n+1))+n),te=(n,t)=>{let s=Array.from({length:t},()=>Array(n).fill("."));const i=.45;for(let r=0;r<t;r++)for(let l=0;l<n;l++)l===0||l===n-1||r===0||r===t-1?s[r][l]="X":s[r][l]=Math.random()<i?"X":".";const e=5;for(let r=0;r<e;r++){const l=s.map(c=>[...c]);for(let c=1;c<t-1;c++)for(let d=1;d<n-1;d++){const g=ee(d,c,s);g>4?l[c][d]="X":g<4&&(l[c][d]=".")}s=l}const{largestArea:o,allAreas:a}=se(s);return a.forEach(r=>{r!==o&&r.forEach(([l,c])=>{s[c][l]="X"})}),{tiles:s,openTiles:o||[]}},ee=(n,t,s)=>{let i=0;for(let e=t-1;e<=t+1;e++)for(let o=n-1;o<=n+1;o++)o===n&&e===t||(o<0||o>=s[0].length||e<0||e>=s.length||s[e][o]==="X")&&i++;return i},se=n=>{const t=new Set,s=[];for(let i=0;i<n.length;i++)for(let e=0;e<n[0].length;e++){const o=`${e},${i}`;if(n[i][e]==="."&&!t.has(o)){const a=[],r=[[e,i]];for(t.add(o);r.length>0;){const[l,c]=r.shift();a.push([l,c]);const d=[[0,1],[0,-1],[1,0],[-1,0]];for(const[g,m]of d){const f=l+g,u=c+m,p=`${f},${u}`;f>=0&&f<n[0].length&&u>=0&&u<n.length&&n[u][f]==="."&&!t.has(p)&&(t.add(p),r.push([f,u]))}}s.push(a)}}return s.sort((i,e)=>e.length-i.length),{largestArea:s[0]||null,allAreas:s}},ie=(n,t)=>{const s=[];if(n.length<20)return[];const i=Math.min(4,Math.floor(1+t/2));for(let e=0;e<i;e++){const o=[],a=w(0,n.length-1);let r=n[a],l=r,c=0;for(let d=0;d<10;d++){const g=w(0,n.length-1),m=n[g],f=Math.hypot(m[0]-r[0],m[1]-r[1]);f>c&&(c=f,l=m)}o.push(r),o.push(l),s.push({path:o,speed:parseFloat((Math.random()*1.5+1+t*.1).toFixed(2)),type:"drone"})}return s},ne=(n,t,s)=>{const i=[],e=[...n],o=()=>{if(e.length===0)return null;const u=w(0,e.length-1),p=e[u];return e.splice(u,1),p};let a=1;const r=w(2,4)+Math.floor(t/4);for(let u=0;u<r;u++){const p=o();p&&i.push({id:`pickup-${a++}`,type:"credit",pos:p,value:[50,100,150][w(0,2)]})}const l=w(3,6)+Math.floor(t/2);for(let u=0;u<l;u++){const p=o();p&&i.push({id:`hazard-${a++}`,type:"mine",pos:p,damage:20})}let c=null,d=-1;if(e.forEach(u=>{const p=Math.hypot(u[0]-s[0],u[1]-s[1]);p>d&&(d=p,c=u)}),c){i.push({id:`portal-${a++}`,type:"exit",pos:c,target:`isle-${w(100,999)}`});const u=e.findIndex(p=>p[0]===c[0]&&p[1]===c[1]);u>-1&&e.splice(u,1)}const g=w(4,6)+Math.floor(t/2);for(let u=0;u<g;u++){const p=o();p&&i.push({id:`resource-${a++}`,type:"fuel",pos:p})}const m=w(1,3)+Math.floor(t/3),f=["shard","overcharge"];for(let u=0;u<m;u++){const p=o();p&&i.push({id:`resource-${a++}`,type:f[w(0,f.length-1)],pos:p})}return i},F=(n=1,t,s)=>{const i=w(30,50),e=w(20,40),{tiles:o,openTiles:a}=te(i,e);if(a.length<50)return console.warn("Generated map is too small or fragmented. Retrying..."),F(n);const r=a.reduce((p,P)=>[p[0]+P[0],p[1]+P[1]],[0,0]),l=[Math.round(r[0]/a.length),Math.round(r[1]/a.length)];let c=a[0],d=1/0;for(const p of a){const P=Math.hypot(p[0]-l[0],p[1]-l[1]);P<d&&(d=P,c=p)}const g=Math.floor(a.length/60)+Math.floor(n/3),m=5,f=a.filter(p=>Math.hypot(p[0]-c[0],p[1]-c[1])>m);for(let p=0;p<g&&f.length!==0;p++){const P=w(0,f.length-1),[C,S]=f.splice(P,1)[0];o[S][C]==="."&&(o[S][C]="O")}return o[c[1]][c[0]]="#",{id:`isle-${w(100,999)}`,seed:Date.now()+w(0,1e4),width:i,height:e,wind:{amp:parseFloat((Math.random()+.5+n*1.2).toFixed(2)),scale:parseFloat((Math.random()*.5+.1).toFixed(2)),gusts:[w(0,5),w(0,5),w(0,5)]},tiles:o,patrols:ie(a,n),gameObjects:ne(a,n,c)}},Y=600,oe=1.5,ae=25;class re{constructor(t,s){this.lifespan=oe,this.damage=ae,this.pos=[...t],this.vel=[Math.cos(s)*Y,Math.sin(s)*Y]}update(t){this.pos[0]+=this.vel[0]*t,this.pos[1]+=this.vel[1]*t,this.lifespan-=t}isDead(){return this.lifespan<=0}}class le{constructor(t,s){if(this.lastTime=0,this.animationFrameId=null,this.projectiles=[],this.effects=[],this.canvas=t,this.renderer=new Lt(t),this.input=new Bt,this.world=new _t,!h.glider)throw new Error("Glider data not loaded in gameState!");this.player=new Vt(h.glider,s,this.input)}async init(){this.input.init();const t=await Qt();if(this.renderer.setSprites(t),!h.level||!h.allBiomes)throw new Error("Level or Biome data not loaded in gameState!");this.world.loadLevelFromData(h.level,h.allBiomes);const s=this.world.findSafeSpawnPoint();this.player.setPosition(s||[100,100]),this.player.reset()}updatePlayerStats(t){this.player.updateStats(t)}start(){h.running||(h.running=!0,this.lastTime=performance.now(),this.animationFrameId=requestAnimationFrame(this.gameLoop.bind(this)),console.log("Game loop started."))}pause(){h.running&&(h.running=!1,this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),console.log("Game loop paused."))}spawnProjectile(t,s){this.projectiles.push(new re(t,s))}loadNextLevel(){console.log("Entering portal, loading next level..."),h.levelDepth++,h.addExperience(200),console.log(`Advancing to difficulty level: ${h.levelDepth}`);const t=F(h.levelDepth);h.level=t,this.world.loadLevelFromData(t,h.allBiomes);const s=this.world.findSafeSpawnPoint();this.player.setPosition(s||[100,100]),this.player.resetVelocity(),this.player.replenishEnergy(),h.updateHUD(this.player),h.saveProfile()}handlePlayerDeath(t){if(!h.running)return;console.log(`Player death: ${t}`),this.pause(),x.playSoundEffect("explosion"),h.saveProfile();const s=document.getElementById("game-over-screen");s&&(document.getElementById("stat-time").textContent=`${h.timeSurvivedThisRun.toFixed(1)}s`,document.getElementById("stat-credits").textContent=h.creditsCollectedThisRun.toString(),document.getElementById("stat-drones").textContent=h.dronesDestroyedThisRun.toString(),document.getElementById("stat-levels").textContent=(h.levelDepth-1).toString(),s.classList.add("visible"))}restartGame(){console.log("Restarting game from level 1."),h.levelDepth=1,h.resetRunStats();const t=F(h.levelDepth);h.level=t,this.world.loadLevelFromData(t,h.allBiomes),this.player.reset();const s=this.world.findSafeSpawnPoint();this.player.setPosition(s||[100,100]),this.player.resetVelocity(),this.projectiles=[],this.effects=[],h.updateHUD(this.player),this.start()}gameLoop(t){if(!h.running)return;const s=(t-this.lastTime)/1e3;this.lastTime=t,this.update(s),this.render(),this.updateHUD(),this.animationFrameId=requestAnimationFrame(this.gameLoop.bind(this))}update(t){this.player.update(t,this.world,this),this.world.update(t,this.player),this.updateProjectiles(t),this.updateEffects(t),h.timeSurvivedThisRun+=t,h.checkForLevelUp(this.player)}updateHUD(){h.updateHUD(this.player)}updateProjectiles(t){const s=this.world.getPatrolStates(),i=32;for(let e=this.projectiles.length-1;e>=0;e--){const o=this.projectiles[e];o.update(t);let a=!1;for(const r of s){const l=o.pos[0]-r.currentPosition[0],c=o.pos[1]-r.currentPosition[1];if(Math.sqrt(l*l+c*c)<i/2){this.world.damagePatrol(r.id,o.damage)?(this.effects.push({pos:[...r.currentPosition],type:"explosion",timer:.4,maxTime:.4}),x.playSoundEffect("explosion"),h.playerCurrency+=50,h.dronesDestroyedThisRun++,h.addExperience(50)):(this.effects.push({pos:[...o.pos],type:"spark",timer:.1,maxTime:.1}),x.playSoundEffect("hit")),a=!0;break}}(a||o.isDead())&&this.projectiles.splice(e,1)}}updateEffects(t){for(let s=this.effects.length-1;s>=0;s--)this.effects[s].timer-=t,this.effects[s].timer<=0&&this.effects.splice(s,1)}render(){this.renderer.render(this.world,this.player,this.projectiles,this.effects)}}let I=null,$=!1,k,D,L;function he(n){const t=document.getElementById("btn-start"),s=document.getElementById("btn-pause"),i=document.getElementById("btn-workshop"),e=document.getElementById("btn-mute"),o=document.getElementById("workshop-screen");if(!t||!s||!i||!e)return;const a=document.getElementById("game-canvas");t.addEventListener("click",()=>{n.start(),t.style.display="none",s.style.display="inline-block",a.focus()}),s.addEventListener("click",()=>{n.pause(),t.style.display="inline-block",s.style.display="none"}),i.addEventListener("click",()=>{n.pause(),t.style.display="inline-block",s.style.display="none",$=!0,o.classList.add("visible")}),e.addEventListener("click",()=>{const l=x.toggleMute();document.getElementById("icon-sound-on").style.display=l?"none":"block",document.getElementById("icon-sound-off").style.display=l?"block":"none"});const r=document.getElementById("btn-restart");r==null||r.addEventListener("click",()=>{var l;(l=document.getElementById("game-over-screen"))==null||l.classList.remove("visible"),o.classList.add("visible"),$=!0,B()})}function ce(){const n=Z(k,D,L),t=document.getElementById("glider-stats-list");t&&(t.innerHTML=`
            <li><span>Max Health:</span> <span class="value">${n.maxHealth.toFixed(0)}</span></li>
            <li><span>Max Energy:</span> <span class="value">${n.maxEnergy.toFixed(0)}</span></li>
            <li><span>Energy Regen:</span> <span class="value">${n.energyRegen.toFixed(2)}/s</span></li>
            <li><span>Gadget Slots:</span> <span class="value">${n.gadgetSlots}</span></li>
            <li><span>Turn Speed:</span> <span class="value">${n.physics.rotation_speed.toFixed(2)}</span></li>
            <li><span>Stabilization:</span> <span class="value">${n.physics.stabilization.toFixed(2)}</span></li>
            <li><span>Boost Power:</span> <span class="value">${n.physics.boost_impulse.toFixed(0)}</span></li>
        `)}function _(n,t,s,i,e){const o=document.getElementById(n);o&&(o.innerHTML="",t.forEach(a=>{var m,f;const r=s.has(a.id),l=a.id===i,c=h.playerCurrency>=a.cost,d=document.createElement("div");d.className="part-item",l&&d.classList.add("equipped");let g;l?g='<button class="control-btn" disabled>–≠–ö–ò–ü–ò–†–û–í–ê–ù–û</button>':r?g=`<button class="control-btn" data-equip-id="${a.id}">–í–´–ë–†–ê–¢–¨</button>`:g=`<button class="control-btn" data-buy-id="${a.id}" ${c?"":"disabled"}>–ö–£–ü–ò–¢–¨ (${a.cost} C)</button>`,d.innerHTML=`
            <h4>${a.name}</h4>
            <p>${a.description}</p>
            ${g}
        `,o.appendChild(d),(m=d.querySelector("[data-equip-id]"))==null||m.addEventListener("click",u=>{u.stopPropagation(),e(a.id)}),(f=d.querySelector("[data-buy-id]"))==null||f.addEventListener("click",u=>{u.stopPropagation(),h.playerProfile&&h.playerCurrency>=a.cost&&(h.playerCurrency-=a.cost,h.playerProfile.purchasedParts.push(a.id),e(a.id),B())})}))}function B(){if(!h.playerProfile)return;const n=document.getElementById("workshop-currency");n&&(n.textContent=h.playerCurrency.toString());const t=new Set(h.playerProfile.purchasedParts);_("chassis-list",h.allChassis,t,k,s=>{k=s,B()}),_("wings-list",h.allWings,t,D,s=>{D=s,B()}),_("engine-list",h.allEngines,t,L,s=>{L=s,B()}),ce()}async function de(n,t){try{t.classList.remove("hidden");const s=await pt(),{version:i,assets:e}=s,[o,a,r,l,c,d,g,m,f,u,p,P,C]=await Promise.all([gt(e.level,i),ft(e.gadgets,i),wt(e.challenges,i),xt(e.events,i),Et(e.tutorial,i),Pt(e.glider,i),bt(e.physics,i),Mt(e.biomes,i),St(e.player_progress,i),Ct(e.melody,i),yt(e.chassis,i),mt(e.wings,i),vt(e.engines,i),Tt()]),S=await J.loadPlayerProfile()??{id:"default",currency:500,purchasedParts:["chassis-light","wings-standard","engine-basic"],equippedChassis:"chassis-light",equippedWings:"wings-standard",equippedEngine:"engine-basic",pilotLevel:1,experience:0};h.setContent({level:o,gadgets:a,challenges:r,events:l,tutorial:c,glider:d,physics:g,biomes:m,playerProgress:f,melody:u,chassis:p,wings:P,engines:C},S),k=S.equippedChassis,D=S.equippedWings,L=S.equippedEngine;const R=document.getElementById("workshop-screen"),Q=document.getElementById("workshop-start-btn");B(),R.classList.add("visible"),$=!0,Q.addEventListener("click",async()=>{if(!h.playerProfile)return;h.playerProfile.equippedChassis=k,h.playerProfile.equippedWings=D,h.playerProfile.equippedEngine=L,await h.saveProfile(),await x.init(),x.setMelody(h.melody),x.startBGM();const H=Z(k,D,L);R.classList.remove("visible"),$=!1,t.classList.remove("hidden"),I?I.updatePlayerStats(H):(I=new le(n,H),await I.init(),he(I)),I.restartGame();const N=document.getElementById("btn-start"),j=document.getElementById("btn-pause");N&&j&&(N.style.display="none",j.style.display="inline-block"),t.classList.add("hidden"),n.focus()})}catch(s){throw console.error("A critical error occurred during content loading:",s),t.innerHTML=`<div style="color: #ef4444; text-align: center; padding: 20px;">
        <h2>Error Loading Game</h2>
        <p>Could not load essential game assets. Please check the console for details and try refreshing the page.</p>
    </div>`,s}finally{t.classList.add("hidden")}}window.addEventListener("DOMContentLoaded",()=>{const n=document.getElementById("game-canvas"),t=document.getElementById("loading-screen");if(!n||!t){console.error("Essential HTML elements are missing!"),document.body.innerHTML='<div style="color: red; font-family: sans-serif; padding: 20px;">Critical Error: Required HTML elements for the game are missing.</div>';return}de(n,t).catch(s=>{console.error("Game initialization failed:",s)}),window.addEventListener("beforeunload",()=>{console.log("Game shutting down.")})});
